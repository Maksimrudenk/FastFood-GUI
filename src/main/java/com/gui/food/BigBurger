import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class BigBurger extends JFrame {
    private JComboBox<String> burgerBox;
    private JComboBox<String> condimentBox;
    private JComboBox<String> toppingBox;
    private OrderController controller;

    public BigBurger(OrderController controller) {
        //Mutator & Interface creation for new window
        this.controller = controller;
        setTitle("BigBurger");
        setSize(300, 200);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setLayout(new FlowLayout());
        //Combobox of arrays
        String[] burgers = {"Meat $5", "Pork $4", "Chicken $3", "Vegan $6"};
        burgerBox = new JComboBox<>(burgers);

        String[] condiments = {"Ketchup $1", "Mayonnaise $1", "Mustard $1", "None $0"};
        condimentBox = new JComboBox<>(condiments);

        String[] toppings = {"Lettuce $0.50", "Tomato $0.50", "Cheese $0.75"};
        toppingBox = new JComboBox<>(toppings);

        JButton calculateButton = new JButton("Add Burger to Order");
        calculateButton.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    addToOrder(); // Button that sents the selected items to method add order
                    dispose(); // closes window upon clicking Jbutton
                }
            });
        //adding components
        add(burgerBox);
        add(condimentBox);
        add(toppingBox);
        add(calculateButton);

        setVisible(true);
    }

    private void addToOrder() { // total amount of all the arrays
        double total = 0;
        total += extractPrice((String) burgerBox.getSelectedItem());
        total += extractPrice((String) condimentBox.getSelectedItem());
        total += extractPrice((String) toppingBox.getSelectedItem());
        controller.addToTotal(total);
    }

    private double extractPrice(String item) { //sets Strings to integers and collects only the numbers
        String pricePart = item.substring(item.indexOf("$") + 1);
        return Double.parseDouble(pricePart);
    }
}
